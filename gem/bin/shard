#!/usr/bin/env ruby
# encoding: UTF-8

require 'rack'
require "pathname"
require 'coffee-script'
require 'commander/import'

bin_file = Pathname.new(__FILE__).realpath
$:.unshift File.expand_path("../../lib", bin_file)
$dirname = File.dirname(File.expand_path(File.dirname bin_file))

require 'rack-adapter'

program :name, 'Shard CLI'
program :version, '0.0.1'
program :description, 'Shard CLI'

command :build do |c|
	c.syntax = ''
	c.description = ''
	c.action do |args,options|
		puts 'Building'
		require 'builder'
		b = Builder.new Dir.pwd
	end
end

command :generate do |c|
	c.syntax = ''
	c.description = ''
	c.action do |args,options|
		puts 'Generating shard template..'
		dir = args[0]
		files = Dir.glob($dirname+"/shard_template")
		FileUtils.cp_r files, Dir.pwd
		FileUtils.move './shard_template', dir
		Dir.glob './'+dir+'/**/*' do |f|
			if File.file? f
				text = File.read(f)
  			text.gsub!('{{name}}', dir)
  			File.open(f, "w+") {|file| file.puts text}
  			if f != f.gsub('temp', dir)
					FileUtils.move f, f.gsub('temp', dir)
				end
			end
		end
	end
end

command :server do |c|
	c.syntax = ''
	c.description = ''
	c.action do |args,options|
		builder = Rack::Builder.new do
			use Shard::RackAdapter
			run Proc.new { |env| [404, {'Content-Type' => 'text/html'}, ['Not Found']] }
		end

		Rack::Handler::Thin.run builder, :Port => 5000
	end
end

command :specserver do |c|
	c.syntax = ''
	c.description = ''
	c.action do |args,options|
		require 'spec_server'
		builder = Rack::Builder.new do
			use Rack::Static, :urls => ['/vendor'], :root => $dirname+"/public"
			use Shard::RackAdapter
			
			run Shard::SpecSever
		end

		Rack::Handler::Thin.run builder, :Port => 5000
	end
end
